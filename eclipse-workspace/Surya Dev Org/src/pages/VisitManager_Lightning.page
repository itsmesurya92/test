<apex:page Controller="MapsController" id="cmpId" showHeader="false">
    <!--<div style="width: 100%;" id="mapDiv">
                <div style="width: 100%; height: 600px; float: left;margin:0px;color:black;"> <c:GMaps /></div>
                <div style="width: 30%; float: left;margin:0px;"> 
                <apex:enhancedList type="Case" height="500" rowsPerPage="10" ListId="00Bj0000002njiI" customizable="False" />     
                  </div>
            </div>-->

            <apex:includeScript value="{!URLFOR($Resource.jQry, 'jquery-ui-1.12.1.custom/external/jquery/jquery.js')}"  />
             <apex:slds /> 
    <html>
        
        <head>
           <meta http-equiv="content-type" content="text/html; charset=UTF-8"/>
           <title>Google Maps API v3 Directions Example</title>
           <script type="text/javascript" src="//maps.google.com/maps/api/js?sensor=true&key=AIzaSyBMh1dJPqTcdZlBkyIeLtOjbo2q9vm0keQ"></script>
           <apex:stylesheet value="{!URLFOR($Resource.CEEvents, 'CSS/bootstrap.min.css')}" />         
        </head> 
        
        <body>
            <div class="slds-grid slds-grid--frame">              
                <div class="slds-size--1-of-1 slds-medium-size--2-of-6 slds-large-size--2-of-6">                
                    <table class="slds-table slds-table--bordered slds-table--resizable-cols slds-wrap">
                        <thead class="headerRow slds-text-title--caps slds-line-height--reset">
                            <th class="slds-is-resizable" scope="col">
                                <div class="slds-truncate slds-wrap" title="Contact Name">S.No</div>
                            </th>          
                            <th class="slds-is-resizable" scope="col">
                                <div class="slds-truncate slds-wrap" title="Contact Name">Contact Name</div>
                            </th>
                        </thead>   
                        <tbody id='tableBodyData'>   
                        </tbody>               
                    </table>   
                </div>  
                <div id="map" class="slds-size--1-of-1 slds-medium-size--4-of-6 slds-large-size--4-of-6"></div>   
                                
            </div>
            <script type="text/javascript">

            
             var directionsService = new google.maps.DirectionsService();
             var directionsDisplay = new google.maps.DirectionsRenderer();
             var map = new google.maps.Map(document.getElementById('map'), {
                       zoom:7,
                       mapTypeId: google.maps.MapTypeId.ROADMAP
             });
             var addressList,contactList, contactIds;   
             var sortedContactList = [];
             var sortedOrder = [];
             start(); 
             
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            var pos = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };
            start(pos);

          }, function() {
                console.log('location is not accessible from browser location');
                var latlng = {lat:{!locLat}, lng: {!locLon}};
                start(latlng);
          });
        } else {          
                console.log("Browser doesn't support Geolocation");
                var latlng = {lat:{!locLat}, lng: {!locLon}};
                start(latlng);
        }             
             
             
             
             
           
            function start(latlng){
             var waypts = [];
             addressList = {!listofAddresses};
             contactList = {!listOfContacts};
             contactIds = {!listOfContactIds};
             console.log(contactList);   
             //var startLoc = getUserLocation();
             directionsDisplay.setMap(map);
             directionsDisplay.setPanel(document.getElementById('panel'));
         
            var geocoder = new google.maps.Geocoder;
            latlng = {lat:33.5586, lng: -112.0955};
            //var latlng = {lat:{!locLat}, lng: {!locLon}};
            console.log(latlng);
            var startAddress = '';
            if (navigator.geolocation) {
            geocoder.geocode({'location': latlng}, function(results, geoStatus) {
                if (geoStatus === 'OK') {
                    if (results[0]) {
                        startAddress = results[0].formatted_address;
                        console.log(results[0].formatted_address);
                    }else{
                        startAddress = '1 Cardinals Dr,  Glendale, AZ 85305, USA';
                        console.log('not matched');
                    }
                }else{
                    startAddress = '1 Cardinals Dr, Glendale, AZ 85305, USA';  
                    console.log('status not OK');  
                }
                
                var service = new google.maps.DistanceMatrixService();
                var dsmRequest = { origins: [latlng],
                                   destinations: addressList,
                                   travelMode: 'DRIVING',
                                   unitSystem:google.maps.UnitSystem.IMPERIAL 
                                 };
                var distanceMap = {};
                console.log(addressList);
                service.getDistanceMatrix(dsmRequest,function(dsmResponse,dsmStatus){
                    if (dsmStatus == 'OK') {
                        var origins = dsmResponse.originAddresses;
                        var destinations = dsmResponse.destinationAddresses;
                        console.log('distances are');
                        var results = dsmResponse.rows[0].elements;
                        var farthestPoint = '';
                        var farthestDistance = 0;
                        console.log(destinations);
                        var distancesList = [];
                        console.log(dsmResponse);
                        for(var t = 0; t < results.length; t++){
                            console.log(destinations[t]);
                                distancesList.push(results[t].distance.value); 

                        }
                        distancesList.sort(function(a, b){return a - b});
                        for(var i = 0; i < results.length; i++){

                            var element = results[i];
                            console.log('From:'+origins[0]+'    To: '+destinations[i]+' is :'+element.distance.text+ ' and '+element.duration.text);    
                            if(farthestDistance < element.distance.value){
                               farthestDistance = element.distance.value;
                               farthestPoint = destinations[i];
                            }
                            var tempEle = contactList[i];
                            tempEle["distanceText"]=element.distance.text;
                            tempEle["distanceValue"]=element.distance.value;
                            tempEle["mapAddress"]=destinations[i];
                            tempEle["order"]=distancesList.indexOf(element.distance.value);
                            contactList[i] = tempEle;
                            //distanceMap[''+element.distance.value] = {'distance':element.distance.text,'address':destinations[i]}

                        }
                        console.log(farthestPoint+' is at '+farthestDistance);
                        console.log(contactList);
                        sortedOrder = [];
                        sortedContactList = [];
                        for(var m = 0; m < contactList.length; m++){
                            sortedOrder.push(contactList[m]["order"]);  
                        }
                        console.log(sortedOrder);
                        for(var x = 0; x < sortedOrder.length; x++){
                            sortedContactList[sortedOrder[x]] = contactList[x];
                        }
                        //createTable(sortedContactList);
                        console.log(sortedContactList);
                        
                       for (var l = 0; l < sortedContactList.length; l++) {
                          waypts.push({
                            location: sortedContactList[l]["mapAddress"],
                            stopover: true
                          });
                       }
                                               
                    }else{
                        console.log('Distance API failed');
                    }
                     var request = {
                         origin: startAddress, // add form to UI
                         destination: farthestPoint, // add form to UI
                       waypoints: waypts,
                       optimizeWaypoints:true,
                       travelMode: google.maps.DirectionsTravelMode.DRIVING
                     }; 
                     request.destination = farthestPoint == '' ? 'Wrigley Mansion' : farthestPoint;
                     directionsService.route(request, function(response, status) {
                       if (status == google.maps.DirectionsStatus.OK) {
                         directionsDisplay.setDirections(response);
                         setInfoWindowContent(response,map,sortedContactList); 
                         createTable(sortedContactList); 
                       }
                     });                    
                
                });                
                          
            });             
        }

        
             
      }
      function createTable(sortedTableData){
      console.log(sortedTableData);
        
        var tbodyTag = document.getElementById('tableBodyData');
        tbodyTag.innerHTML = '';
        var rowCount = 0;  
        for(var i=0; i<sortedTableData.length;i++){ 

            var casesList = sortedTableData[i].Cases;
            for(var j=0; j<casesList.length;j++){
            var caseInfo = casesList[j];
            var row = tbodyTag.insertRow(rowCount); 
            var cell1 = row.insertCell(0);
            var cell2 = row.insertCell(1);
            //var cell3 = row.insertCell(2);
            //var cell3 = row.insertCell(2);  
            //var cell4 = row.insertCell(3);                         
            row.setAttribute('id',sortedTableData[i].contactId)

            cell2.innerHTML = "<a href='/"+caseInfo.caseId+"'>"+sortedTableData[i].contactName+"</a>";
            //cell3.innerHTML = sortedTableData[i].phone;
            //cell2.innerHTML = sortedTableData[i].duration;
            //cell3.innerHTML = sortedTableData[i].distance;                        
             rowCount++; 
             cell1.innerHTML = rowCount;
            }
        }
      }
      function setInfoWindowContent(directionResult, map, sortedContactList) {
          //var contentString = '<b>'+sortedContactList[0]+'</b><br>';
          startLocation = new Object();
          endLocation = new Object();

          var legs = directionResult.routes[0].legs; 
          console.log(legs.length);
                  
          var order = directionResult.routes[0].waypoint_order; 
           
          for (var i = 0; i < legs.length; i++) {

              if(i==0){
                createMarker(i,legs[i].start_location,"Your Start Location",legs[i].start_address,null); 
                if(sortedContactList[i]){ 
                sortedContactList[i]["duration"] = legs[i].duration.text;   
                sortedContactList[i]["distance"] = legs[i].distance.text;   
                }                                  
              }else{
                var index = order[i-1];
                console.log(index);
                console.log(sortedContactList[index]);
                if(sortedContactList[index]){ 
                sortedContactList[index]["duration"] = legs[i].duration.text;   
                sortedContactList[index]["distance"] = legs[i].distance.text;   
                }                
                createMarker(index,legs[i].start_location,sortedContactList[index],legs[i].start_address,i);     
              }
              /*if(i == legs.length-1){
                  createMarker(i,legs[i].end_location,"Your End Location");    
              }*/             
          }      
          console.log(sortedContactList);                                   
      }
      function createMarker(i,position,infoWindowText,mapAddress,locCount){
          var marker = new google.maps.Marker({zIndex:999});
          marker.setMap(map);
          marker.setPosition(position); 
          marker.setTitle(infoWindowText.contactName);
          //marker.setIcon(pinImage);
          //marker.setShadow(pinShadow);
          var htmlContent = '<div style="width:100%;">';
          if(infoWindowText != "Your Start Location") {
              marker.setLabel(''+locCount);
              htmlContent += '<b><div style="text-align:center">'+infoWindowText.contactName+'</div><hr/>Cases: </b>';
              infoWindowText.Cases.forEach(function(caseElement){
                  htmlContent += '<a href="/'+caseElement.caseId+'">'+caseElement.caseNumber+'</a>  ';
              });
              htmlContent += '<br/><b>Actual Address: </b><div style="display:inline-block;word-wrap:break-word;word-break:break-all">'+infoWindowText.address+'</div>';
              htmlContent += '<br/><b>Map Address: </b><div style="display:inline-block;word-wrap:break-word;word-break:break-all">'+mapAddress+'</div><br/>';              
              htmlContent += '<b>Duration: </b>'+infoWindowText["duration"]+'  <b>Distance: </b>'+infoWindowText["distance"];              
          }else{
               htmlContent = "Your Start Location";   
               htmlContent += '<br/><b>Address: </b><div style="display:inline-block;word-wrap:break-word;word-break:break-all">'+mapAddress+'</div><br/>'; 
          }
              htmlContent += '</div>';

          /*for(var a : infoWindowText.Cases){
              
          }*/   
          console.log(infoWindowText); 
          google.maps.event.addListener(marker, 'click', function() {
              var infowindow2 = new google.maps.InfoWindow({zIndex:1000});                  
              infowindow2.setContent(htmlContent);
              infowindow2.setPosition(this.position); 
              infowindow2.open(map);
              $('[id*=003]').css('background-color','');      
              if(infoWindowText != "Your Start Location")        
                  document.getElementById(infoWindowText.contactId).style.backgroundColor = '#87cefa';

              console.log(i+'~~~~'+contactIds);
             });      
      
      }             
           </script>
           
        </body>
    </html>       
  
 
</apex:page>