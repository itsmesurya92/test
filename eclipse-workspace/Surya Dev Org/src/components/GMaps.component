<apex:component Controller="MapsController" id="cmpId">
    <apex:includeScript value="{!URLFOR($Resource.jQry, 'jquery-ui-1.12.1.custom/external/jquery/jquery.js')}"  />
    
    <apex:pageBlock >
        
    </apex:pageBlock>

    <html>
        
        <head>
           <meta http-equiv="content-type" content="text/html; charset=UTF-8"/>
           <title>Google Maps API v3 Directions Example</title>
           <script type="text/javascript" src="//maps.google.com/maps/api/js?sensor=true"></script>
        </head> 
        
        <body>
            
            <div style="width: 100%;" id="mapDiv">
                <div id="map" style="width: 70%; height: 600px; float: left;margin:0px;color:black;"></div>
               <div style="width: 30%; float: left;margin:0px;"> 
               <apex:form >  
               <apex:commandLink action="{!next}" value="Next"/>
               </apex:form>
                  <table border="1" style='border-collapse: collapse;' width="100%">
                   <tr>
                        <th>Case Id</th>
                        <th>Contact Name</th>
                        <th>Phone</th>
                        <th>Address</th>
                     </tr>
               <apex:repeat value="{!keyList}" var="cMap" first="{!offsetCount}" rows="{!rowCount}">
                  <!-- <table id='{!cMap}' border="1" style='border-collapse: collapse;' width="100%"> -->
                    
                       <apex:repeat value="{!contactsMap[cMap]}" var="c">
                           <tr  id='{!c.ContactId}'>
                               <td>{!c.CaseNumber}</td>
                               <td>{!c.Contact.Name}</td>
                               <td>{!c.Contact.Phone}</td> 
                               <td>{!c.Contact.MailingStreet},{!c.Contact.MailingCity},{!c.Contact.MailingState},{!c.Contact.MailingCountry},{!c.Contact.MailingPostalCode}</td>                               
                           </tr>
                       </apex:repeat>

               </apex:repeat>  
             </table>          
               </div> 
            </div>
            <script type="text/javascript">

            
             var directionsService = new google.maps.DirectionsService();
             var directionsDisplay = new google.maps.DirectionsRenderer();
             var map = new google.maps.Map(document.getElementById('map'), {
                       zoom:7,
                       mapTypeId: google.maps.MapTypeId.ROADMAP
             });
             var addressList,contactList, contactIds ;             
             start(); 
           
            function start(){
            console.log('called start');
            console.log({!listofAddresses});  
                                                console.log('~~~~~~~~~~~~');
                        console.log({!listOfContacts});
                                                            console.log('~~~~~~~~~~~~');
                                    console.log({!listOfContactIds}); 
                                    console.log('~~~~~~~~~~~~');         
             var waypts = [];
             addressList = {!listofAddresses};
             contactList = {!listOfContacts};
             contactIds = {!listOfContactIds};
               for (var i = 0; i < addressList.length; i++) {
                  waypts.push({
                    location: addressList[i],
                    stopover: true
                  });
               }
      

             //var startLoc = getUserLocation();
             directionsDisplay.setMap(map);
             directionsDisplay.setPanel(document.getElementById('panel'));
            var geocoder = new google.maps.Geocoder;
            var latlng = {lat: {!locLat}, lng: {!locLon}};
            console.log('{!locLat} and {!locLon}');
            var startAddress = '';
            geocoder.geocode({'location': latlng}, function(results, geoStatus) {
                console.log('hello');
                if (geoStatus === 'OK') {
                    if (results[0]) {
                        startAddress = results[0].formatted_address;
                        console.log(results[0].formatted_address);
                    }else{
                        startAddress = '1 Cardinals Dr, Glendale, AZ 85305, USA';
                        console.log('not matched');
                    }
                }else{
                    startAddress = '1 Cardinals Dr, Glendale, AZ 85305, USA';  
                    console.log('status not OK');  
                }
                
                var service = new google.maps.DistanceMatrixService();
                var dsmRequest = { origins: [latlng],
                                   destinations: addressList,
                                   travelMode: 'DRIVING'
                                 };
                service.getDistanceMatrix(dsmRequest,function(dsmResponse,dsmStatus){
                    if (dsmStatus == 'OK') {
                        var origins = dsmResponse.originAddresses;
                        var destinations = dsmResponse.destinationAddresses;
                        console.log(addressList);
                        console.log('distances are');
                        var results = dsmResponse.rows[0].elements;
                        var farthestPoint = '';
                        var farthestDistance = 0;
                        for(var i = 0; i < results.length; i++){
                            var element = results[i];
                            console.log('From:'+origins[0]+'    To: '+destinations[i]+' is :'+element.distance.text+ ' and '+element.duration.text);    
                            if(farthestDistance < element.distance.value){
                               farthestDistance = element.distance.value;
                               farthestPoint = destinations[i];
                            }
                        }
                        console.log(farthestPoint+' is at '+farthestDistance);
                    
                    }else{
                        console.log('Distance API failed');
                    }
                     var request = {
                         origin: startAddress, // add form to UI
                         destination: farthestPoint, // add form to UI
                       waypoints: waypts,
                       optimizeWaypoints:true,
                       travelMode: google.maps.DirectionsTravelMode.DRIVING
                     }; 
                     request.destination = farthestPoint == '' ? 'Wrigley Mansion' : farthestPoint;
                     directionsService.route(request, function(response, status) {
                       console.log('111'+status);
                       if (status == google.maps.DirectionsStatus.OK) {
                         directionsDisplay.setDirections(response);
                         setInfoWindowContent(response,map,contactList);  
                       }
                     });                    
                
                });                
                          
            });             
        

        
             
      }
      function setInfoWindowContent(directionResult, map, contactList) {
          var contentString = '<b>'+contactList[0]+'</b><br>';
          startLocation = new Object();
          endLocation = new Object();

          var legs = directionResult.routes[0].legs; 
                  
          var order = directionResult.routes[0].waypoint_order;  
          console.log(order);
                    console.log(addressList.length+' locations given are:'+addressList);   
                    console.log(contactList.length+' contacts given are:'+contactList);                  
          for (var i = 0; i < legs.length; i++) {
    var pinColor = i==0 || i == legs.length-1 ? "FE7569" : "FF0000";
    var pinImage = new google.maps.MarkerImage("http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|" + pinColor,
        new google.maps.Size(21, 34),
        new google.maps.Point(0,0),
        new google.maps.Point(10, 34));
    /*var pinShadow = new google.maps.MarkerImage("http://chart.apis.google.com/chart?chst=d_map_pin_shadow",
        new google.maps.Size(40, 37),
        new google.maps.Point(0, 0),
        new google.maps.Point(12, 35));*/
                   
              console.log(legs[i].start_location+'~~~'+legs[i].end_location);
              if(i==0){
                  createMarker(i,legs[i].start_location,"Your Start Location",pinImage);    
              }else{
                  var index = order[i-1];
                  createMarker(index,legs[i].start_location,contactList[index],pinImage);                   
              }
              /*if(i == legs.length-1){
                  createMarker(i,legs[i].end_location,"Your End Location",pinImage);    
              }*/             
          }                                         
      }
      function createMarker(i,position,infoWindowText,pinImage){
              
          var marker = new google.maps.Marker({zIndex:999});
          marker.setMap(map);
          marker.setPosition(position); 
          var splitIndex = infoWindowText.indexOf('!'); 
          marker.setTitle(infoWindowText.substring(splitIndex+1,infoWindowText.length).replace("<br/>","\\n"));
          marker.setIcon(pinImage);
          //marker.setShadow(pinShadow);
              
          google.maps.event.addListener(marker, 'click', function() {
              var infowindow2 = new google.maps.InfoWindow({zIndex:1000});                  
              infowindow2.setContent(this.title.replace("\\n","<br/>"));
              infowindow2.setPosition(this.position); 
              infowindow2.open(map);
                            console.log(i+'~~~~'+contactIds);
              $('[id*=003]').css('background-color','');      
              if(infoWindowText != "Your Start Location")        
                  document.getElementById(contactIds[i]).style.backgroundColor = 'red';

              console.log(i+'~~~~'+contactIds);
             });      
      
      }             
           </script>
           
        </body>
    </html>       

</apex:component>